{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isArray.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isTypeFunction.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isFunction.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isTypeObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isNumber.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isNumeric.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/getAllPropertyNames.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/getPrototypeChain.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/pushUnique.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/mergeCallback.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/merge.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observables/src/build.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isString.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isUndefined.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isEmpty.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isNull.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/from.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isTypeArray.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/flatten.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/first.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/last.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isPlainObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/js/isBoolean.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/each.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/even.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/compareCallback.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/obj/copyPlain.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/Lexer.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/wrapped.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/after.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/unwrap.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/beforeLast.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/before.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/toCamel.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/str/toTitle.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/intersect.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/browser-pie/src/apis/matchRect.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/unique.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/util/arr/any.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isArray.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isString.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isUndefined.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isNull.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isTypeFunction.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isTypeObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isObject.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/from.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isEmpty.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isTypeArray.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isNumber.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isFunction.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/getType.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/getFirebase.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/pathUtils.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/intersect.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/Firebase.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/all.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isNumeric.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/get.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/from.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/js/isClass.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/pushUnique.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/mergeCallback.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/copy.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/unobserve.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/obj/each.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/Fireable.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/Interceptor.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/Action.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/Interceptors.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/getInterceptors.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/_getProps.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/keys.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/build.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/observe.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/Delta.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/link.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/unlink.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/closure.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/unique.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/get.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/Event.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/Observer.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/any.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/crossJoin.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/Observers.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/node_modules/@webqit/util/arr/remove.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/observer/getObservers.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/has.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/_setProp.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/interceptor/set.js","webpack:///C:/Users/ox_ha/Documents/CODE/webqit/observer/src/index.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","toString","Number","isNaN","keysAll","until","prototypalChain","obj","indexOf","push","getPrototypeOf","forEach","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","callback","deepProps","isReplace","withSymbols","depth","obj1","shift","length","Error","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","k","Observables","String","arguments","undefined","keys","castObject","slice","values","_flatten","withObjects","reduce","acc","concat","count","firsts","amount","reverse","returnValue","parseFloat","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","filter","str","delims","options","copyResult","nesting","maxDepth","comments","tokens","matches","matchesi","$cache","cache","cached","lex","this","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","limit","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","nextIndex","quote","block","startsWith","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","subject","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","beforeLast","replace","txt","charAt","toUpperCase","strict","fromStart","arr2","val1","val2","parserCache","sizeProperties","sizePropertiesAll","map","prop","offsetProperties","intersectionProperties","matchRect","query","now","PQ","parseQuery","parse","meta","vars","args","addVar","varName","vals","addArg","argName","split","chunk","id","trim","queries","exprParse","_exprList","_expr","operator","parseExpr","expr","varNames","argNames","matchedIntersectionProps","matchedIntersectionThresholds","total","index","self","matchedOffsetProps","matchedSizeProps","matchedPercentageSizeProps","prevTest","CSSVal","dispatcher","RectQueryListInstance","RectQueryList","_dispatcher","intersectRoot","document","offsetParent","scrollParent","IntersectionObserverFactory","resizeObserversObjectForTarget","ResizeObserverFactory","$","offsetParentRect","addEventListener","handleChange","detail","EventTarget","initCallback","super","_rect","rect","changed","dispatchEvent","CustomEvent","contentRect","contentBoxSize","borderBoxSize","registry","type","_root","boundingClientRect","rootBounds","intersectionRect","isConnected","observers","evalQuery","queryObj","evalObj","_queryObj","exprObj","eval","observer","GlobalResizeObserverInstance","GlobalResizeCallbacks","Map","ResizeObserver","entries","entry","resizeRegistry","set","observe","GlobalIntersectionObserverInstances","root","threshold","intersectionObserverForRoot","_intersectionRegistry","_threshold","round","EPSILON","registries","instance","IntersectionObserver","intersectionRegistry","evalExpr","operand_a","operand_b","includes","readVal","inverses","top","bottom","left","right","readIntersection","readRect","readRelativeOffset","percentagesContextRect","unit","rectObject","varsCallback","truthy","exprSplit","operand_b_1","operand_b_2","operand","prev","curr","firebase","firebaseKeyTypeSymbol","for","firebaseKeyType","Base","paths2D","paths","pathsIs2D","multiple","path","yes","pathsIsDynamic","pathArray","seg","pathIsSame","a","b","pathStartsWith","pathAfter","fireables","currentlyFiring","fireable","_fireable","dfn","fireableFilter","fireableTags","params","tags","dfnFilter","dfnTags","originalHandler","handler","_a","reciever","_ctxt","ctxt","_key","trap","exists","Function","getObservers","forget","disconnected","Fireable","event","next","recieved","seal","Firebase","add","Interceptor","action","defaultHandler","Action","_args","interceptor","fire","pop","getFirebase","createIfNotExist","Interceptors","interceptors","defaultKeys","_keys","ownKeys","getInterceptors","_getProps","subtree","build","_paths2D","rootLevelKeysToObserve","subLevelKeysToObserve","subBuild","isUserObject","_isFunction","existing","unique","remove","originalSubject","changes","_changes","delta","src","field","Delta","linkTag","unobserve","context","subjects","subjectCopy","cntxt","initialKeys","currentKeys","related","buffered","isUpdate","oldValue","unlink","defaultGet","_value","autoClosures","closure","apply","_","propagationStopped","defaultPrevented","promisesInstance","promises","promise","Promise","all","rspns","proms","isEvent","stopPropagation","preventDefault","waitUntil","filters2D","filtersIsOriginally2D","filtersIsDynamic","diff","evt","Event","observerPathArray_Resolved_Exploded","observerPathArray","observerPathArray_Resolved","_dynamicFieldOutcome","suptree","currTable","column","newTable","row","_row","pathArrays","formatChanges","changesObject","_each","respond","data","paddableMatch","pathArrayPadding","derived","Observer","splice","Observers","defaultHas","_state","keysOrPayload","handleSet","descriptor","define","defaultSet","_success","eventObject","success","events","successfulEvents","successCount","_setProp","matchMedia","mediaMatchResult","observable","window","Element","WQ","Obsv","Observable"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\n\r\n/**\r\n * #var Object\r\n */\r\nconst Observables = {};\r\nexport {\r\n    Observables as default,\r\n};\r\n\r\n/**\r\n * The collection of Observables\r\n *\r\n * @param String|Object name\r\n * @param Object        Observable\r\n * \r\n * #return Object\r\n */\r\nexport function build(name, Observable = null) {\r\n    if (_isObject(name)) {\r\n        _merge(Observables, name);\r\n    } else {\r\n        Observables[name] = Observable;\r\n    }\r\n    return Observables;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _toTitle from './toTitle.js';\r\n\r\n/**\r\n * Makes a string camel-cased.\r\n *\r\n * @param string \tstr\r\n * @param bool\t \tfromStart\r\n *\r\n * @return string\r\n */\r\nexport default function(str, fromStart) {\r\n\t// Make disting words\r\n\tstr = _toTitle(str.replace(/-/g, ' ')).replace(/ /g, '');\r\n\treturn fromStart ? str : str[0].toLowerCase() + str.substr(1);\r\n};\r\n","\r\n/**\r\n * Converts a string to title case.\r\n *\r\n * @param string \tstr\r\n * @param bool \t\tstrict\r\n *\r\n * @return string\r\n */\r\nexport default function(str, strict) {\r\n\tif (typeof str !== 'string') {\r\n\t\treturn str;\r\n\t}\r\n\treturn str.replace(/\\w\\S*/g,  function(txt) { return txt.charAt(0).toUpperCase() + ((typeof strict !== undefined && strict) ? txt.substr(1).toLowerCase() : txt.substr(1)); })\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _isBoolean from '@webqit/util/js/isBoolean.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _toCamel from '@webqit/util/str/toCamel.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _any from '@webqit/util/arr/any.js';\r\n\r\n/**\r\n * @consts\r\n */\r\n\r\nconst parserCache = {};\r\nconst sizeProperties = ['width', 'height',];\r\nconst sizePropertiesAll = sizeProperties.concat(sizeProperties.map(prop => 'inner-' + prop), sizeProperties.map(prop => 'outer-' + prop));\r\nconst offsetProperties = ['top', 'left', 'right', 'bottom',];\r\nconst intersectionProperties = sizeProperties.map(prop => 'intersection-' + prop).concat(offsetProperties.map(prop => 'intersection-' + prop));\r\n        \r\n/**\r\n * ---------------------------\r\n * The Observable media query\r\n * ---------------------------\r\n *\r\n * This is a Container Query implementation.\r\n * Delivered as an observable.\r\n */\r\n\r\nexport default function matchRect(target, query, now = false) {\r\n    var PQ = parserCache[query];\r\n    if (!PQ) {\r\n        PQ = parseQuery(query);\r\n        PQ.meta.varNames = Object.keys(PQ.meta.vars);\r\n        PQ.meta.argNames = Object.keys(PQ.meta.args);\r\n        PQ.meta.matchedIntersectionProps = _intersect(intersectionProperties, PQ.meta.varNames);\r\n        PQ.meta.matchedIntersectionThresholds = _unique(PQ.meta.matchedIntersectionProps.reduce((total, prop) => total.concat(PQ.meta.vars[prop]), []));\r\n        PQ.meta.matchedOffsetProps = _intersect(offsetProperties, PQ.meta.varNames);\r\n        PQ.meta.matchedSizeProps = _intersect(sizePropertiesAll, PQ.meta.varNames);\r\n        PQ.meta.matchedPercentageSizeProps = _intersect(sizePropertiesAll, PQ.meta.varNames).filter(prop => _any(PQ.meta.vars[prop], CSSVal => CSSVal.endsWith('%')));\r\n        parserCache[query] = PQ;\r\n    }\r\n    // ----------\r\n    var dispatcher,\r\n        RectQueryListInstance = new RectQueryList(_dispatcher => { dispatcher = _dispatcher; });\r\n    // ----------\r\n    var intersectRoot = PQ.meta.args['intersection-root'] === 'document' ? document : (PQ.meta.args['intersection-root'] === 'offset-parent' ? target.offsetParent : target.scrollParent);\r\n    // ----------\r\n    if (PQ.meta.matchedIntersectionProps.length) {\r\n        // Observe intersection for target with given root\r\n        // IntersectionObserverFactory() will maintain only one instance of IntersectionObserver\r\n        // for \"intersectRoot\", globally. \"target\" will only be observed on an existing instance.\r\n        IntersectionObserverFactory(target, query, dispatcher, intersectRoot, PQ.meta.matchedIntersectionThresholds);\r\n    }\r\n    if (PQ.meta.matchedSizeProps.length || PQ.meta.matchedOffsetProps.length || !query/* @see: [on-parent-resize] */) {\r\n        // Observe target's resize\r\n        // ResizeObserverFactory() will maintain only one instance of ResizeObserver\r\n        // for \"target\", globally. \"dispatcher\" will only be added on an existing instance.\r\n        const resizeObserversObjectForTarget = ResizeObserverFactory(target, query, dispatcher);\r\n        // Observe offsetParent's resize?\r\n        if (PQ.meta.matchedOffsetProps.length || PQ.meta.matchedPercentageSizeProps.length) {\r\n            // If @previous-query isn't already observing its offsetParent\r\n            // so that resizeObserversObjectForTarget isn't iterated twice on one parent-resize event\r\n            if (!resizeObserversObjectForTarget.$.offsetParentRect) {\r\n                // matchRect() will maintain only instance of ResizeObserver\r\n                // for \"offsetParent\", globally. This matchRect() will only hook up on an existing instance.\r\n                resizeObserversObjectForTarget.$.offsetParentRect = matchRect(target.offsetParent, ''); // @ref: [on-parent-resize]\r\n                resizeObserversObjectForTarget.$.offsetParentRect.addEventListener('change', e => {\r\n                    handleChange(target, e.detail, resizeObserversObjectForTarget, 'parent-resize');\r\n                });\r\n            }\r\n            // if @hasIntersectionQueries isn't already just observing offsetParent\r\n            // so that dispatcher isn't called twice on one intersection event\r\n            if (!(PQ.meta.matchedIntersectionProps.length && intersectRoot === target.offsetParent)) {\r\n                // IntersectionObserverFactory() will maintain only one instance of IntersectionObserver\r\n                // for \"offsetParent\" pair, globally. \"dispatcher\" will only be added on an existing instance.\r\n                IntersectionObserverFactory(target, query, dispatcher, target.offsetParent);\r\n            }\r\n        }\r\n    }\r\n    return RectQueryListInstance;\r\n};\r\n\r\n/**\r\n * ------------------\r\n * This is our custom event target that\r\n * delivers live values.\r\n * ------------------\r\n */\r\n\r\nclass RectQueryList extends EventTarget {\r\n    constructor(initCallback) {\r\n        super();\r\n        var _rect = {};\r\n        Object.defineProperty(this, 'rect', {get: () => _rect});\r\n        const dispatcher = (matches, rect, query) => {\r\n            // -----------\r\n            // Note the order...\r\n            var changed = !query || !('matches' in _rect) || !(matches === _rect.matches);\r\n            rect.matches = matches;\r\n            _rect = rect;\r\n            if (changed) {\r\n                this.dispatchEvent(new CustomEvent('change', {detail: rect}));\r\n            }\r\n            // -----------\r\n        };\r\n        initCallback(dispatcher);\r\n    }\r\n    get contentRect() { return this.rect.contentRect; }\r\n    get contentBoxSize() { return this.rect.contentBoxSize; }\r\n    get borderBoxSize() { return this.rect.borderBoxSize; }\r\n    get matches() { return this.rect.matches; }\r\n}\r\n\r\n/**\r\n * ------------------\r\n * This change handler is called \r\n * from the various codes observing\r\n * property changes\r\n * ------------------\r\n */\r\n\r\nfunction handleChange(target, rect, registry, type, _root = null) {\r\n    if (type === 'resize') {\r\n        registry.$.rect = rect;\r\n    } else if (type === 'parent-resize') {\r\n        registry.$.offsetParentRect = rect;\r\n    } else if (type === 'intersection') {\r\n        registry.$.rect = rect.boundingClientRect;\r\n        if (_root === target.offsetParent) {\r\n            registry.$.offsetParentRect = rect.rootBounds;\r\n        }\r\n        registry.$.intersectionRect = rect;\r\n    }\r\n    // Note that some conditions above can be true\r\n    // even if target.isConnected is false. So this is\r\n    // place to return.\r\n    if (!target.isConnected) {\r\n        return;\r\n    }\r\n    _each(registry, (query, observers) => {\r\n        // First filter out by thresholds\r\n        if (type === 'intersection') {\r\n            /** TODO\r\n            observers = observers.filter(observer => {\r\n                if (observer.threshold && !observer.threshold.includes(rect.intersectionRatio)) {\r\n                    console.log(observer.threshold, rect.intersectionRatio);\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            */\r\n        }\r\n        if (observers.length) {\r\n            var matches = evalQuery(parserCache[query], registry.$.rect, registry.$.offsetParentRect, registry.$.intersectionRect);\r\n            observers.forEach(observer => {\r\n                observer.callback(matches, registry.$.rect, query);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * ------------------\r\n * We use one ResizeObserver instance for\r\n * all case, and only when needed.\r\n * ------------------\r\n */\r\n\r\nvar GlobalResizeObserverInstance;\r\nconst GlobalResizeCallbacks = new Map();\r\nconst ResizeObserverFactory = (target, query, callback = null) => {\r\n    if (!GlobalResizeObserverInstance) {\r\n        GlobalResizeObserverInstance = new ResizeObserver(entries => {\r\n            entries.forEach(entry => {\r\n                handleChange(entry.target, entry, GlobalResizeCallbacks.get(entry.target), 'resize');\r\n            });\r\n        });\r\n    }\r\n    var resizeRegistry = GlobalResizeCallbacks.get(target);\r\n    if (!resizeRegistry) {\r\n        resizeRegistry = {};\r\n        Object.defineProperty(resizeRegistry, '$', {value:{}});\r\n        GlobalResizeCallbacks.set(target, resizeRegistry);\r\n        GlobalResizeObserverInstance.observe(target);\r\n    }\r\n    // Add to resizeRegistry\r\n    // or get resizeRegistry?\r\n    if (callback) {\r\n        if (!resizeRegistry[query]) {\r\n            resizeRegistry[query] = [];\r\n            Object.defineProperty(resizeRegistry[query], '$', {value:{}});\r\n        }\r\n        resizeRegistry[query].push({callback});\r\n    }\r\n    return resizeRegistry;\r\n};\r\n\r\n/**\r\n * ------------------\r\n * We use one IntersectionObserver instance for\r\n * all cases of a root, and only when needed.\r\n * ------------------\r\n */\r\n\r\nconst GlobalIntersectionObserverInstances = new Map();\r\nconst IntersectionObserverFactory = (target, query, callback = null, root = null, threshold = null) => {\r\n    // ---------------------\r\n    var intersectionObserverForRoot = GlobalIntersectionObserverInstances.get(root);\r\n    // ---------------------\r\n    if (!intersectionObserverForRoot) {\r\n        const _intersectionRegistry = new Map();\r\n        const _threshold = [];\r\n        for (var i = 0; i <= 100; i ++) {\r\n            _threshold.push(Math.round(((i * 0.01) + Number.EPSILON) * 100) / 100);\r\n        }\r\n        intersectionObserverForRoot = {\r\n            registries: _intersectionRegistry,\r\n            instance: new IntersectionObserver(entries => {\r\n                entries.forEach(entry => {\r\n                    handleChange(entry.target, entry, _intersectionRegistry.get(entry.target), 'intersection', root);\r\n                });\r\n            }, {\r\n                root: root,\r\n                threshold: _threshold,\r\n            }),\r\n        };\r\n        GlobalIntersectionObserverInstances.set(root, intersectionObserverForRoot);\r\n    }\r\n    // ---------------------\r\n    var intersectionRegistry = intersectionObserverForRoot.registries.get(target);\r\n    if (!intersectionRegistry) {\r\n        intersectionObserverForRoot.instance.observe(target);\r\n        intersectionRegistry = {};\r\n        Object.defineProperty(intersectionRegistry, '$', {value:{}});\r\n        intersectionObserverForRoot.registries.set(target, intersectionRegistry);\r\n    }\r\n    // Add to intersectionRegistry\r\n    // or get intersectionRegistry?\r\n    if (callback) {\r\n        if (!intersectionRegistry[query]) {\r\n            intersectionRegistry[query] = [];\r\n            Object.defineProperty(intersectionRegistry[query], '$', {value:{}});\r\n        }\r\n        intersectionRegistry[query].push({callback, threshold});\r\n    }\r\n    return intersectionRegistry;\r\n};\r\n\r\n/**\r\n * ------------------\r\n * This is our eval() set\r\n * of functions.\r\n * ------------------\r\n */\r\n\r\nfunction evalQuery(queryObj, rect, offsetParentRect, intersectionRect) {\r\n    if (_isEmpty(queryObj)) {\r\n        return true;\r\n    }\r\n    // --------------\r\n    if (_isObject(queryObj)) {\r\n        var evalObj = {};\r\n        _each(queryObj.queries, (id, _queryObj) => {\r\n            var value = evalQuery(_queryObj, rect, offsetParentRect, intersectionRect);\r\n            Object.defineProperty(evalObj, id, {get: () => value});\r\n        });\r\n        return evalObj;\r\n    }\r\n    // --------------\r\n    return queryObj.reduce((evalObj, exprObj) => {\r\n        evalObj.result = exprObj.operator === 'or'\r\n            ? evalObj.result || exprObj.expr.eval(rect, offsetParentRect, intersectionRect) \r\n            : evalObj.result && exprObj.expr.eval(rect, offsetParentRect, intersectionRect);\r\n        return evalObj;\r\n    }, {result: true}).result;\r\n}\r\n// ---------------\r\nfunction evalExpr(operand_a, operator, operand_b, rect, offsetParentRect, intersectionRect) {\r\n    if (intersectionProperties.includes(operand_a)) {\r\n        var contextualProp = operand_a.startsWith('intersection-') ? _after(operand_a, 'intersection-') : operand_a;\r\n        operand_b = readVal(operand_b, contextualProp, intersectionRect.boundingClientRect/* percentages scope */);\r\n        operand_a = readIntersection(operand_a, intersectionRect);\r\n    } else {\r\n        operand_b = readVal(operand_b, operand_a, offsetParentRect/* percentages scope */);\r\n        if (sizePropertiesAll.includes(operand_a)) {\r\n            operand_a = readRect(operand_a, rect);\r\n        } else if (offsetProperties.includes(operand_a)) {\r\n            operand_a = readRelativeOffset(operand_a, rect, offsetParentRect);\r\n        } else {\r\n            operand_a = readRect(_toCamel(operand_a), rect);\r\n        }\r\n    }\r\n    var result;\r\n    switch(operator) {\r\n        case 'boolish':\r\n            result = (operand_a && operand_b) || (!operand_a && !operand_b) ? true : false;\r\n        break;\r\n        case '<=':\r\n            result = operand_a <= operand_b;\r\n        break;\r\n        case '>=':\r\n            result = operand_a >= operand_b;\r\n        break;\r\n        case '<':\r\n            result = operand_a < operand_b;\r\n        break;\r\n        case '>':\r\n            result = operand_a > operand_b;\r\n        break;\r\n        default:\r\n            result = operand_a === operand_b;\r\n    }\r\n    return result;\r\n}\r\n// ----------------\r\nfunction readVal(val, prop, percentagesContextRect) {\r\n    if (_isBoolean(val)) {\r\n        return val;\r\n    }\r\n    if (_isNumeric(val)) {\r\n        return parseFloat(val);\r\n    }\r\n    // ------------\r\n    if (val.endsWith('%')) {\r\n        var unit = val.substr(-1);\r\n        val = parseFloat(val.substr(0, val.length - 1));\r\n        var containerVal;\r\n        if (['width', 'height'].includes(prop) || prop.endsWith('-width') || prop.endsWith('-height')) {\r\n            containerVal = readRect(prop, percentagesContextRect);\r\n        } else if (['left', 'right'].includes(prop) || prop.endsWith('-left') || prop.endsWith('-right')) {\r\n            containerVal = readRect('width', percentagesContextRect);\r\n        } else if (['top', 'bottom'].includes(prop) || prop.endsWith('-top') || prop.endsWith('-bottom')) {\r\n            containerVal = readRect('height', percentagesContextRect);\r\n        } else {         \r\n            prop = _toCamel(prop);\r\n            if (prop in percentagesContextRect) {\r\n                containerVal = percentagesContextRect[prop];\r\n            } else {\r\n                containerVal = 1;\r\n            }\r\n        }\r\n        return (val / 100) * containerVal;\r\n    }\r\n    // ------------\r\n    var unit = val.substr(-2);\r\n    val = parseFloat(val.substr(0, val.length - 2));\r\n    switch(unit) {\r\n        case 'px':\r\n        break;\r\n        default:\r\n            throw new Error('The CSS unit \"' + unit + '\" is not currently supported.');\r\n    }\r\n    return val;\r\n}\r\n// -----------------\r\nfunction readRect(prop, rect) {\r\n    if (!rect) {\r\n        return;\r\n    }\r\n    var rectObject;\r\n    if (['inner-width', 'inner-height'].includes(prop) && rect.contentBoxSize) {\r\n        prop = prop === 'inner-width' ? 'inlineSize' : 'blockSize';\r\n        rectObject = rect.contentBoxSize[0];\r\n    } else if (['outer-width', 'outer-height', 'width', 'height'].includes(prop) && rect.borderBoxSize) {\r\n        prop = prop === 'outer-width' || prop === 'width' ? 'inlineSize' : 'blockSize';\r\n        rectObject = rect.borderBoxSize[0];\r\n    } else {\r\n        prop = prop.startsWith('outer-') || prop.startsWith('inner-') ? prop.substr(0, 6) : prop;\r\n        rectObject = rect.contentRect || rect;\r\n    }\r\n    return rectObject[prop];\r\n}\r\nfunction readRelativeOffset(prop, rect, offsetParentRect) {\r\n    if (['top', 'left'].includes(prop)) {\r\n        return readRect(prop, rect) - readRect(prop, offsetParentRect);\r\n    }\r\n    return readRect(prop, offsetParentRect) - readRect(prop, rect);\r\n}\r\n// ------------------\r\nfunction readIntersection(prop, intersectionRect) {\r\n    if (prop.startsWith('intersection-')) {\r\n        prop = _after(prop, 'intersection-');\r\n        if (['width', 'height'].includes(prop)) {\r\n            return intersectionRect.intersectionRect[prop];\r\n        }\r\n        var inverses = {top: 'bottom', bottom: 'top', left: 'right', right: 'left'}\r\n        if (['top', 'left'].includes(prop)) {\r\n            return intersectionRect.rootBounds[inverses[prop]] - intersectionRect.boundingClientRect[prop];\r\n        }\r\n        return intersectionRect.boundingClientRect[prop] - intersectionRect.rootBounds[inverses[prop]];\r\n    }\r\n    return intersectionRect[_toCamel(prop)];\r\n}\r\n// ------------------\r\n\r\n/**\r\n * ------------------\r\n * This is our parse() set\r\n * of functions.\r\n * ------------------\r\n */\r\n\r\nfunction parseQuery(query) {\r\n    // --------------------\r\n    var parse = [], meta = {vars: {}, args: {}};\r\n    var addVar = (varName, vals) => {\r\n        if (!meta.vars[varName]) {\r\n            meta.vars[varName] = [];\r\n        }\r\n        meta.vars[varName].push(...vals);\r\n    };\r\n    var addArg = (argName, val) => {\r\n        if (argName in meta.args) {\r\n            throw new Error('An argument may be set only once in a query. Duplicate: ' + argName);\r\n        }\r\n        meta.args[argName] = val;\r\n    };\r\n    // --------------------\r\n    if (query) {\r\n        // ---------------\r\n        if (_wrapped(query, '{', '}')) {\r\n            return Lexer.split(_unwrap(query, '{', '}'), [';']).reduce((obj, chunk) => {\r\n                var [ id, query ] = Lexer.split(chunk, [':']).map(s => s.trim());\r\n                obj.queries[id] = parseQuery(query);\r\n                // -----\r\n                _each(obj.queries[id].meta.vars, addVar);\r\n                _each(obj.queries[id].meta.args, addArg);\r\n            }, {queries: {}});\r\n        }\r\n        // ---------------\r\n        var exprParse = Lexer.lex(query.toLowerCase(), [' and ', ' or ', ',', ' using ']);\r\n        parse = exprParse.tokens.reduce((_exprList, _expr, i) => {\r\n            var operator = (exprParse.matches[i - 1] || '').trim();\r\n            // ------------\r\n            // Are we in args phase\r\n            if (operator === 'using' || !_isEmpty(meta.args)) {\r\n                parseExpr(_expr.trim(), addArg);\r\n                return _exprList;\r\n            }\r\n            // ------------\r\n            var expr = parseExpr(_expr.trim(), (varName, ...vals) => addVar(varName, vals));\r\n            if (!_exprList) {\r\n                return [{expr, operator: 'and',}];\r\n            }\r\n            return _exprList.concat({expr, operator});\r\n        }, null);\r\n    }\r\n    Object.defineProperty(parse, 'meta', {value: meta});\r\n    return parse;\r\n}\r\n// ---------------\r\nfunction parseExpr(expr, varsCallback) {\r\n    var truthy = true;\r\n    if (_wrapped(expr, '(', ')') || _wrapped(expr, 'not(', ')')) {\r\n        if (_wrapped(expr, 'not(', ')')) {\r\n            truthy = false;\r\n            expr = _unwrap(expr, 'not(', ')');\r\n        } else {\r\n            expr = _unwrap(expr, '(', ')');\r\n        }\r\n    }\r\n    var exprParse = Lexer.lex(expr, [':', '<=', '<', '>=', '>']);\r\n    var exprSplit = exprParse.tokens.map(e => e.trim());\r\n    // (operand_b_1 <= operand_a <= operand_b_2)\r\n    if (exprSplit.length > 2) {\r\n        var operand_b_1 = exprSplit[0],\r\n            operand_a = exprSplit[1],\r\n            operand_b_2 = exprSplit[2];\r\n        // ---------------\r\n        varsCallback(operand_a, operand_b_1, operand_b_2);\r\n        // ---------------\r\n        return {\r\n            truthy,\r\n            operand_a,\r\n            operand_b: [{\r\n                operand: operand_b_1,\r\n                // Reverse operator\r\n                operator: exprParse.matches[0].startsWith('<') ? '>' + _after(exprParse.matches[0], '<')\r\n                    : (exprParse.matches[0].startsWith('>') ? '<' + _after(exprParse.matches[0], '>') : exprParse.matches[0]), // <=, >=\r\n            }, {\r\n                operand: operand_b_2,\r\n                operator: exprParse.matches[1], // <=, >=\r\n\r\n            }],\r\n            eval(rect, offsetParentRect, intersectionRect) {\r\n                return this.operand_b.reduce(\r\n                    (prev, curr) => prev && evalExpr(this.operand_a, curr.operator, curr.operand, rect, offsetParentRect, intersectionRect), true\r\n                ) === this.truthy;\r\n            }\r\n        };\r\n    }\r\n    // (operand_a: operand_b), (operand_a <= operand_b)\r\n    if (exprSplit.length > 1) {\r\n        const exprObj = {\r\n            truthy,\r\n            eval(rect, offsetParentRect, intersectionRect) {\r\n                return evalExpr(this.operand_a, this.operator, this.operand_b, rect, offsetParentRect, intersectionRect) === this.truthy;\r\n            }\r\n        };\r\n        exprObj.operand_a = exprSplit[0];\r\n        exprObj.operand_b = exprSplit[1];\r\n        exprObj.operator = exprParse.matches[0];\r\n        if (exprObj.operator === ':') {\r\n            exprObj.operator = '=';\r\n            if (exprObj.operand_a.startsWith('min-')) {\r\n                exprObj.operator = '>=';\r\n                exprObj.operand_a = _after(exprObj.operand_a, 'min-');\r\n            } else if (exprObj.operand_a.startsWith('max-')) {\r\n                exprObj.operator = '<=';\r\n                exprObj.operand_a = _after(exprObj.operand_a, 'max-');\r\n            }\r\n        }\r\n        // ---------------\r\n        varsCallback(exprObj.operand_a, exprObj.operand_b);\r\n        // ---------------\r\n        return exprObj;\r\n    }\r\n    // (expr)\r\n    varsCallback(expr, true);\r\n    return {\r\n        truthy,\r\n        expr: expr,\r\n        eval(rect, offsetParentRect, intersectionRect) {\r\n            return evalExpr(this.expr, 'boolish', true, rect, offsetParentRect, intersectionRect) === this.truthy;\r\n        }\r\n    };\r\n}","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest || callback(itm, i), false);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '@webqit/util/js/isArray';\r\nimport _isTypeArray from '@webqit/util/js/isTypeArray';\r\nimport _isEmpty from '@webqit/util/js/isEmpty';\r\nimport _isObject from '@webqit/util/js/isObject';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Returns the val's type.\r\n *\r\n * @param string \tval\r\n *\r\n * @return string\r\n */\r\nexport default function(val) {\r\n\treturn typeof val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _getType from '@webqit/util/js/getType.js';\r\n\r\n/**\r\n * Returns an subject's firebase.\r\n *\r\n * @param array|object\tsubject\r\n * @param string      \tfirebaseKeyType\r\n * @param object      \tBase\r\n *\r\n * @return Firebase\r\n */\r\nexport default function(subject, firebaseKeyType, Base = null) {\r\n    if (!_isTypeObject(subject)) {\r\n        throw new Error('Object must be of type subject; \"' + _getType(subject) + '\" given!');\r\n    }\r\n    var firebase, firebaseKeyTypeSymbol = Symbol.for(firebaseKeyType);\r\n    if (!(firebase = subject[firebaseKeyTypeSymbol]) && Base) {\r\n        firebase = new Base(subject);\r\n        subject[firebaseKeyTypeSymbol] = firebase;\r\n    }\r\n    return firebase;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '@webqit/util/js/isArray';\r\nimport _arrFrom from '@webqit/util/arr/from';\r\nimport _all from '@webqit/util/arr/all';\r\n\r\n/**\r\n *  Returns paths in 2-dimensional form.\r\n * \r\n * - key                    => [ [key] ]\r\n * - [key]                  => [ [key] ]\r\n * - [ [key] ]              => [ [key] ]\r\n * - [ [key1, key2] ]      => [ [key1, key2] ]\r\n * \r\n * @param Array|String paths\r\n * \r\n * @return Array\r\n */\r\nexport function paths2D(paths) {\r\n\treturn (pathsIs2D(paths) ? paths : (_arrFrom(paths).length ? [paths] : []))\r\n\t\t.reduce((multiple, path) => multiple.concat([_arrFrom(path)]), []);\r\n};\r\n\r\n/**\r\n * OTHER HELPERS\r\n */\r\n\r\nexport function pathsIs2D(paths) {\r\n\treturn _arrFrom(paths).reduce((yes, path) => yes || _isArray(path), false);\r\n};\r\nexport function pathsIsDynamic(pathArray) {\r\n\treturn pathArray.filter(seg => !seg && seg !== 0).length;\r\n};\r\nexport function paths2DIsDynamic(paths) {\r\n\treturn paths.filter(pathArray => pathsIsDynamic(_arrFrom(pathArray))).length;\r\n};\r\nexport function pathIsSame(a, b) {\r\n\treturn a.length === b.length && a.reduce((prev, value, i) => prev && value === b[i], true);\r\n};\r\nexport function paths2DIsSame(a, b) {\r\n\treturn a.length === b.length && _all(a, (_a, i) => pathIsSame(_a, b[i]));\r\n};\r\nexport function pathStartsWith(a, b) {\r\n\treturn b.reduce((prev, value, i) => prev && value === a[i], true);\r\n};\r\nexport function pathAfter(a, b) {\r\n\treturn a.slice(b.length);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { paths2D, paths2DIsSame } from './pathUtils.js'\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Firebase class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param object\tsubject\r\n\t * \r\n\t * @return void\r\n\t */\r\n\tconstructor(subject) {\r\n\t\tthis.subject = subject;\r\n\t\tthis.fireables = [];\r\n\t\tthis.currentlyFiring = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds an Fireable instance\r\n\t * with optional tags.\r\n\t *\r\n\t * @param Fireable\t\t\tfireable\r\n\t *\r\n\t * @return Fireable\r\n\t */\r\n\tadd(fireable) {\r\n\t\tthis.fireables.push(fireable);\r\n\t\treturn fireable;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes fireables by instance.\r\n\t *\r\n\t * @param Fireable\t\t\tfireable\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tremove(fireable) {\r\n\t\tthis.fireables = this.fireables.filter(_fireable => _fireable !== fireable);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes fireables by definition.\r\n\t *\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tforget(dfn) {\r\n\t\tthis.match(dfn).forEach(fireable => {\r\n\t\t\tthis.fireables = this.fireables.filter(_fireable => _fireable !== fireable);\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Finds fireables by definition.\r\n\t *\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(dfn) {\r\n\t\treturn this.fireables.filter(fireable => {\r\n\t\t\tvar fireableFilter = paths2D(fireable.filter);\r\n\t\t\tvar fireableTags = _arrFrom((fireable.params || {}).tags);\r\n\t\t\t// -----------------------\r\n\t\t\tvar dfnFilter = paths2D(dfn.filter);\r\n\t\t\tvar dfnTags = _arrFrom((dfn.params || {}).tags);\r\n\t\t\t// -----------------------\r\n\t\t\treturn (!dfn.originalHandler || fireable.handler === dfn.originalHandler)\r\n\t\t\t\t&& (!dfnFilter.length || paths2DIsSame(dfnFilter, fireableFilter))\r\n\t\t\t\t&& (!dfnTags.length || (dfnTags.length === fireableTags.length && _intersect(fireableTags, dfnTags).length === dfnTags.length));\r\n\t\t});\r\n\t}\r\n};","\r\n/**\r\n * Tells if ALL items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest && callback(itm, i), true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _getType from '@webqit/util/js/getType.js';\r\nimport getObservers from './getObservers.js';\r\n\r\n/**\r\n * Removes observers from an subject's firebase.\r\n *\r\n * @param array|object\t\t\t\tsubject\r\n * @param string|array|function\t\tfilter\r\n * @param function\t\t\t\t\toriginalHandler\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, filter, originalHandler = null, params = {}) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Observable subjects must be of type object; \"' + _getType(subject) + '\" given!');\r\n\t}\r\n\tif (_isFunction(filter)) {\r\n\t\tparams = arguments.length > 2 ? originalHandler : {};\r\n\t\toriginalHandler = filter;\r\n\t\tfilter = null;\r\n\t}\r\n\tif (originalHandler && !_isFunction(originalHandler)) {\r\n\t\tthrow new Error('Handler must be a function; \"' + _getType(originalHandler) + '\" given!');\r\n\t}\r\n\tvar observers;\r\n\tif (observers = getObservers(subject, false)) {\r\n\t\treturn observers.forget({filter, originalHandler, params,});\r\n\t}\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * ---------------------------\r\n * The Fireable class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param object|array\t\tsubject\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tthis.subject = subject;\r\n\t\tthis.handler = dfn.handler;\r\n\t\tthis.filter = dfn.filter;\r\n\t\tthis.params = dfn.params;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a \"disconnected\" flag on the Fireable.\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tdisconnect() {\r\n\t\tthis.disconnected = true;\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport Fireable from '../Fireable.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Trap class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Fireable {\r\n\t\r\n\t/**\r\n\t * Calls the observer's handler function\r\n\t * on matching with the event's fields.\r\n\t *\r\n\t * @param Event\t\t\t \t\t\tevent\r\n\t * @param function\t\t\t\t\tnext\r\n\t * @param mixed\t\t\t\t\t \trecieved\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tfire(event, next, recieved) {\r\n\t\tif (this.disconnected || (this.filter && !_intersect(_arrFrom(this.filter), [event.type]).length)) {\r\n\t\t\treturn next(...Array.prototype.slice.call(arguments, 2));\r\n\t\t}\r\n\t\treturn this.handler(event, recieved, next);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The QueryEvent class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\tsubject\r\n\t * @param object\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tthis.subject = subject;\r\n\t\tif (!dfn.type) {\r\n\t\t\tthrow new Error('Action type must be given in definition!');\r\n\t\t}\r\n\t\t_each(dfn, (key, value) => {\r\n\t\t\tObject.defineProperty(this, key, {value, enumerable:true});\r\n\t\t});\r\n\t\tObject.seal(this);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Firebase from '../Firebase.js';\r\nimport Interceptor from './Interceptor.js';\r\nimport Action from './Action.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Reactive class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Firebase {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(dfn) {\r\n\t\treturn super.add(new Interceptor(this.subject, dfn));\r\n\t}\r\n\r\n\t/**\r\n\t * Fires all interceptors with the given action.\r\n\t *\r\n\t * @param Action\t\t\taction\r\n\t * @param function\t\t\tdefaultHandler\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tfire(action, defaultHandler = null) {\r\n\t\tif (!(action instanceof Action)) {\r\n\t\t\taction = new Action(this.subject, action);\r\n\t\t}\r\n\t\tif (this.currentlyFiring.filter(a => a.type === action.type && a.name === action.name).length) {\r\n\t\t\treturn defaultHandler ? defaultHandler() : undefined;\r\n\t\t}\r\n\t\tthis.currentlyFiring.push(action);\r\n\t\tconst next = (index, ..._args) => {\r\n\t\t\tvar interceptor = this.fireables[index];\r\n\t\t\tif (interceptor) {\r\n\t\t\t\treturn interceptor.fire(action, (...args) => {\r\n\t\t\t\t\treturn next(index + 1, ...args);\r\n\t\t\t\t}/*next*/, ..._args);\r\n\t\t\t}\r\n\t\t\treturn defaultHandler ? defaultHandler(..._args) : _args[0];\r\n\t\t};\r\n\t\tvar value = next(0);\r\n\t\tthis.currentlyFiring.pop();\r\n\t\treturn value;\r\n\t}\r\n};","/**\r\n * @imports\r\n */\r\nimport getFirebase from '../getFirebase.js';\r\nimport Interceptors from './Interceptors.js';\r\n\r\n/**\r\n * Returns Interceptors List handle.\r\n * \r\n * @param object    subject \r\n * @param bool      createIfNotExist \r\n * \r\n * @returns Observers\r\n */\r\nexport default function(subject, createIfNotExist = true) {\r\n    return getFirebase(subject, 'wn.interceptors', createIfNotExist ? Interceptors : null);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Runs a \"getProps\" type of query operation on a subject.\r\n * Fires any observers for the specific type that may be bound to subject.\r\n *\r\n * @param bool\t\t\townKeys\r\n * @param array|object\tsubject\r\n *\r\n * @return array\r\n */\r\nexport default function(ownKeys, subject) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute any \"keys\" traps, otherwise \"test\" the default way\r\n\tvar interceptors, defaultKeys = function(_keys) {\r\n\t\treturn arguments.length ? _keys : (\r\n\t\t\townKeys ? Object.getOwnPropertyNames(subject) : Object.keys(subject)\r\n\t\t);\r\n\t};\r\n\tif (interceptors = getInterceptors(subject, false)) {\r\n\t\treturn interceptors.fire({type:ownKeys ? 'ownKeys' : 'keys'}, defaultKeys);\r\n\t}\r\n\treturn defaultKeys();\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _getProps from './_getProps.js';\r\n\r\n/**\r\n * Runs a \"keys\" query operation on a subject.\r\n * Fires any such query observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n *\r\n * @return array\r\n */\r\nexport default function(subject) {\r\n\treturn _getProps(false/*ownKeys*/, ...arguments);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { paths2D } from '../pathUtils.js'\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _keys from '../interceptor/keys.js';\r\nimport _get from '../interceptor/get.js';\r\nimport getObservers from './getObservers.js';\r\nimport link from './link.js';\r\n\r\n/**\r\n * Recursively \"connects\" an object's members to the object\r\n * for observer actions.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tpaths\r\n * @param bool\t\t\tsubtree\r\n *\r\n * @return void\r\n */\r\nexport default function build(subject, paths = null, subtree = false) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\tvar observers = getObservers(subject);\r\n\tif (!observers || observers.build) {\r\n\t\treturn;\r\n\t}\r\n\tobservers.build = subtree;\r\n\t// ---------------------------------\r\n\t// For paths2D, refer to the comments at class Observer.\r\n\tvar _paths2D = paths2D(paths);\r\n\t// If any path starts with a dot, (a wild card path), all keys at this level is implied\r\n\tvar rootLevelKeysToObserve = !_paths2D.length || _paths2D.filter(path => /*Starts with an empty segment*/!path[0] && path[0] !== 0).length\r\n\t\t? _keys(subject) \r\n\t\t: _paths2D.map(path => path[0]);\r\n\tvar subLevelKeysToObserve = _paths2D.length ? _paths2D.map(path => path.slice(1)).filter(p => p.length) : null;\r\n\tobservers.subBuild = subLevelKeysToObserve && subLevelKeysToObserve.length ? subLevelKeysToObserve : null;\r\n\trootLevelKeysToObserve.forEach(key => {\r\n\t\tvar value = _get(subject, key);\r\n\t\ttry {\r\n\t\t\tif (_isTypeObject(value)) {\r\n\t\t\t\tlink(subject, key, value);\r\n\t\t\t\tif ((observers.subBuild && isUserObject(value)) \r\n\t\t\t\t|| (_isFunction(subtree) ? subtree(value) : (subtree && isUserObject(value)))) {\r\n\t\t\t\t\tbuild(value, observers.subBuild, subtree);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch(e) {/* instanceof-ing certain primitives may throw */}\r\n\t});\r\n};\r\n\r\n/**\r\n * Tells if an object if a User Object.\r\n * \r\n * @param Object value\r\n * \r\n * @return Bool\r\n */\r\nconst isUserObject = value => (value instanceof Object) || (value instanceof Array) || (value instanceof Function);\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _getType from '@webqit/util/js/getType.js';\r\nimport getObservers from './getObservers.js';\r\nimport build from './build.js';\r\n\r\n/**\r\n * Adds an observer to an subject's firebase.\r\n *\r\n * @param array|object\t\t\t\tsubject\r\n * @param string|array|function\t\tfilter\r\n * @param function\t\t\t\t\thandler\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return Observer\r\n */\r\nexport default function(subject, filter, handler = null, params = {}) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Observable subjects must be of type object; \"' + _getType(subject) + '\" given!');\r\n\t}\r\n\tif (_isFunction(filter)) {\r\n\t\tparams = arguments.length > 2 ? handler : {};\r\n\t\thandler = filter;\r\n\t\tfilter = null;\r\n\t}\r\n\tif (!_isFunction(handler)) {\r\n\t\tthrow new Error('Handler must be a function; \"' + _getType(handler) + '\" given!');\r\n\t}\r\n\tvar existing, observers = getObservers(subject);\r\n\tvar dfn = {filter, handler, params,};\r\n\tif (dfn.filter || dfn.params.subtree) {\r\n\t\tbuild(subject, dfn.filter, dfn.params.subtree);\r\n\t}\r\n\tif (dfn.params.unique && (existing = observers.match({filter, params})).length) {\r\n\t\tif (dfn.params.unique !== 'replace') {\r\n\t\t\treturn existing[0];\r\n\t\t}\r\n\t\tobservers.remove(existing[0]);\r\n\t}\r\n\treturn observers.add(dfn);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The QueryEvent class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\tsubject\r\n\t * @param object\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tthis.subject = subject;\r\n\t\tif (!dfn.originalSubject) {\r\n\t\t\tthis.originalSubject = subject;\r\n\t\t}\r\n\t\tif (!('type' in dfn)) {\r\n\t\t\tthrow new Error('Delta type must be given in definition!');\r\n\t\t}\r\n\t\tif (!('name' in dfn)) {\r\n\t\t\tthrow new Error('Property name must be given in definition!');\r\n\t\t}\r\n\t\t_each(dfn, (key, value) => {\r\n\t\t\tObject.defineProperty(this, key, {value, enumerable:true});\r\n\t\t});\r\n\t\tif (!this.path) {\r\n\t\t\tObject.defineProperty(this, 'path', {value:[dfn.name], enumerable:true});\r\n\t\t}\r\n\t\tObject.seal(this);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport getObservers from './getObservers.js';\r\nimport observe from './observe.js';\r\nimport Delta from './Delta.js';\r\n\r\n/**\r\n * Bubble helper\r\n *\r\n * @param array|object\tsubject\r\n * @param string\t\tfield\r\n * @param array|object\tvalue\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, field, value) {\r\n\tif (subject === value) {\r\n\t\treturn;\r\n\t}\r\n\tvar observers;\r\n\tobserve(value, changes => {\r\n\t\tif (observers = getObservers(subject, false)) {\r\n\t\t\tvar _changes = changes.map(delta => {\r\n\t\t\t\t// ------------\r\n\t\t\t\t// Recursive events must not propagate\r\n\t\t\t\t// ------------\r\n\t\t\t\tvar d = delta;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (d.subject === subject) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while(d = d.src);\r\n\t\t\t\t// ------------\r\n\t\t\t\t// Create propagation\r\n\t\t\t\t// ------------\r\n\t\t\t\tvar dfn = {}; _each(delta, (key, value) => {\r\n\t\t\t\t\tif (key !== 'subject' && key !== 'name' && key !== 'path' && key !== 'src') {\r\n\t\t\t\t\t\tdfn[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tdfn.name = field;\r\n\t\t\t\tdfn.path = [field].concat(delta.path);\r\n\t\t\t\tdfn.originalSubject = delta.originalSubject;\r\n\t\t\t\tdfn.src = delta;\r\n\t\t\t\treturn new Delta(subject, dfn);\r\n\t\t\t}).filter(c => c);\r\n\t\t\tif (_changes.length) {\r\n\t\t\t\treturn observers.fire(_changes);\r\n\t\t\t}\r\n\t\t}\r\n\t}, {subtree:true, unique:true, tags:[linkTag, field, subject]});\r\n};\r\n\r\n/**\r\n * @var object\r\n */\r\nexport const linkTag = {};","\r\n/**\r\n * @imports\r\n */\r\nimport unobserve from './unobserve.js';\r\nimport { linkTag } from './link.js';\r\n\r\n/**\r\n * Unbubble helper\r\n *\r\n * @param array|object\tsubject\r\n * @param string\t\tfield\r\n * @param array|object\tobject\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, field, value) {\r\n\tunobserve(value, null, null, {tags:[linkTag, field, subject]});\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport getObservers from './getObservers.js';\r\nimport unlink from './unlink.js';\r\nimport link from './link.js';\r\n\r\n/**\r\n * Executes a callback function on a subject in \"closure\" mode.\r\n * Fires any observers that may be bound to subject on recorded changes.\r\n *\r\n * @param function\t\tcallback\r\n * @param array\t\t\t...subjects\r\n *\r\n * @return array|Event\r\n */\r\nexport default function(callback, ...subjects) {\r\n\tvar context = subjects.map(subject => {\r\n\t\tif (!_isTypeObject(subject)) {\r\n\t\t\tthrow new Error('Target must be of type object!');\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsubject,\r\n\t\t\tsubjectCopy: _isArray(subject) ? subject.slice(0) : _copy(subject),\r\n\t\t};\r\n\t});\r\n\t// ---------------------------------\r\n\tvar result = callback(...subjects);\r\n\t// ---------------------------------\r\n\tcontext.map(cntxt => {\r\n\t\tvar initialKeys = Object.keys(cntxt.subjectCopy);\r\n\t\tvar currentKeys = Object.keys(cntxt.subject);\r\n\t\tvar related = [];\r\n\t\tvar changes = _unique(initialKeys.concat(currentKeys)).map(key => {\r\n\t\t\tif (cntxt.subjectCopy[key] !== cntxt.subject[key]) {\r\n\t\t\t\trelated.push(key);\r\n\t\t\t\t// ---------------------------------\r\n\t\t\t\t// The event object\r\n\t\t\t\tvar e = {\r\n\t\t\t\t\tname:key,\r\n\t\t\t\t\trelated,\r\n\t\t\t\t\tbuffered: true,\r\n\t\t\t\t};\r\n\t\t\t\tif (currentKeys.includes(key)) {\r\n\t\t\t\t\te.type = 'set';\r\n\t\t\t\t\te.value = cntxt.subject[key];\r\n\t\t\t\t\tif (initialKeys.includes(key)) {\r\n\t\t\t\t\t\te.isUpdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\te.type = 'del';\r\n\t\t\t\t}\r\n\t\t\t\tif (initialKeys.includes(key)) {\r\n\t\t\t\t\te.oldValue = cntxt.subjectCopy[key];\r\n\t\t\t\t}\r\n\t\t\t\t// ---------------------------------\r\n\t\t\t\t// Unobserve outgoing value for bubbling\r\n\t\t\t\tif (_isTypeObject(cntxt.subjectCopy[key])) {\r\n\t\t\t\t\tunlink(cntxt.subject, key, cntxt.subjectCopy[key]);\r\n\t\t\t\t}\r\n\t\t\t\t// Observe incoming value for bubbling\r\n\t\t\t\tif (_isTypeObject(cntxt.subject[key])) {\r\n\t\t\t\t\tlink(cntxt.subject, key, cntxt.subject[key]);\r\n\t\t\t\t}\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t}).filter(c => c);\r\n\t\t// ---------------------------------\r\n\t\tvar observers;\r\n\t\tif (changes.length && (observers = getObservers(cntxt.subject, false))) {\r\n\t\t\treturn observers.fire(changes);\r\n\t\t}\r\n\t});\r\n\treturn result;\r\n}\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _objFrom from '@webqit/util/obj/from.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport closure from '../observer/closure.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Runs a \"get\" query operation on a subject.\r\n * Fires any such query observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeys\r\n * @param bool\t\t\tautoClosures\r\n *\r\n * @return mixed\r\n */\r\nexport default function(subject, keys, autoClosures = false) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute any \"get\" traps, otherwise \"get\" the default way\r\n\tvar value, interceptors, defaultGet = function(_value) {\r\n\t\treturn arguments.length ? _value : (_isArray(keys) ? _objFrom(keys, subject) : subject[keys]);\r\n\t};\r\n\tif (interceptors = getInterceptors(subject)) {\r\n\t\tvalue = interceptors.fire({type:'get', name:keys}, defaultGet);\r\n\t} else {\r\n\t\tvalue = defaultGet();\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute array methods in \"mutation\" mode\r\n\tif (autoClosures && _isArray(subject) && !_isNumeric(keys) && _isFunction(value) && !_isClass(value)) {\r\n\t\treturn function observerArrayMethodWrapper(...args) {\r\n\t\t\treturn closure(() => {\r\n\t\t\t\treturn value.apply(subject, args);\r\n\t\t\t}, subject);\r\n\t\t};\r\n\t}\r\n\treturn value;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Event class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\t\ttarget\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(target) {\r\n\t\tthis._ = {};\r\n\t\tthis._.target = target;\r\n\t\tthis._.propagationStopped = false;\r\n\t\tthis._.defaultPrevented = false;\r\n\t\tthis._.promisesInstance = null;\r\n\t\tthis._.promises = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the \"target\" object.\r\n\t *\r\n\t * @return array|object\r\n\t */\r\n\tget target() {\r\n\t\treturn this._.target;\r\n\t}\r\n\r\n\t/**\r\n\t * -----------------------\r\n\t * RESPONSE HANDLERS\r\n\t * -----------------------\r\n\t */\r\n\r\n\t/**\r\n\t * Stops the evnt from reaching other listeners.\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstopPropagation() {\r\n\t\tthis._.propagationStopped = true;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * (Readonly) tells if stopPropagation() has been called.\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tget propagationStopped() {\r\n\t\treturn this._.propagationStopped;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Sets a disposition that asks event initiator not to\r\n\t * proceed with default action.\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tpreventDefault() {\r\n\t\tthis._.defaultPrevented = true;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * (Readonly) tells if preventDefault() has been called.\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tget defaultPrevented() {\r\n\t\treturn this._.defaultPrevented;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Sets a Promise disposition.\r\n\t *\r\n\t * @param Promise\tpromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\twaitUntil(promise) {\r\n\t\tif (promise instanceof Promise) {\r\n\t\t\tthis._.promises.push(promise);\r\n\t\t\tthis._.promisesInstance = null;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * (Readonly) returns all promises.\r\n\t *\r\n\t * @return Promise|null\r\n\t */\r\n\tget promises() {\r\n\t\tif (!this._.promisesInstance && this._.promises.length) {\r\n\t\t\tthis._.promisesInstance = Promise.all(this._.promises);\r\n\t\t}\r\n\t\treturn this._.promisesInstance;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Evaluates the given disposition value and\r\n\t * calls an appropriate disposition method.\r\n\t *\r\n\t * @params mixed \trspns\r\n\t *\r\n\t * @return void\r\n\t */\r\n\trespond(rspns) {\r\n\t\tvar proms;\r\n\t\tvar isEvent = _isObject(rspns) && !_isUndefined(rspns.propagationStopped) && !_isUndefined(rspns.defaultPrevented)\r\n\t\tif ((rspns === false) || (isEvent && rspns.propagationStopped)) {\r\n\t\t\tthis.stopPropagation();\r\n\t\t} else if ((rspns === false) || (isEvent && rspns.defaultPrevented)) {\r\n\t\t\tthis.preventDefault();\r\n\t\t} else if ((rspns instanceof Promise && (proms = rspns))\r\n\t\t|| (isEvent && (proms = rspns.promises))) {\r\n\t\t\tthis.waitUntil(proms);\r\n\t\t}\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _crossJoin from '@webqit/util/arr/crossJoin.js';\r\nimport _any from '@webqit/util/arr/any.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _commonsGet from '@webqit/util/obj/get.js';\r\nimport _get from '../interceptor/get.js';\r\nimport Fireable from '../Fireable.js';\r\nimport Delta from './Delta.js';\r\nimport Event from './Event.js';\r\nimport {\r\n\tpaths2D, pathsIs2D, pathIsSame, pathsIsDynamic, paths2DIsDynamic, pathStartsWith, pathAfter\r\n} from '../pathUtils.js'\r\n\r\n/**\r\n * ---------------------------\r\n * The Observer class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Fireable {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\t\tsubject\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tsuper(subject, dfn);\r\n\t\t// The rest of this code is designed for a 2-dimensional array.\r\n\t\tthis.filters2D = paths2D(this.filter);\r\n\t\tthis.filtersIsOriginally2D = pathsIs2D(this.filter);\r\n\t\tthis.filtersIsDynamic = paths2DIsDynamic(this.filters2D);\r\n\t\tif (this.filtersIsDynamic && this.filters2D.length > 1) {\r\n\t\t\tthrow new Error('Only one \"Dynamic Filter\" must be observed at a time! \"' + this.filters2D.map(pathArray => '[' + pathArray.join(', ') + ']').join(', ') + '\" have been bound together.');\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Calls the observer's handler function\r\n\t * on matching with the event's filter.\r\n\t *\r\n\t * @param array\t\t\t \tchanges\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tfire(changes) {\r\n\t\tif (this.disconnected || (this.params.type && !_any(changes, delta => this.params.type === delta.type))) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst diff = delta => ['set', 'def'].includes(delta.type) \r\n\t\t\t&& (!this.params.diff || (_isFunction(this.params.diff) ? this.params.diff(delta.value, delta.oldValue) : delta.value !== delta.oldValue));\r\n\t\tvar evt = new Event(this.subject);\r\n\t\tif (this.filters2D.length) {\r\n\t\t\tvar observerPathArray_Resolved_Exploded = [];\r\n\t\t\tvar matches = this.filters2D.filter((observerPathArray, i) => {\r\n\t\t\t\tobserverPathArray_Resolved_Exploded[i] = [];\r\n\t\t\t\t// one observerPathArray can turn out to be two if dynamic\r\n\t\t\t\t// and evt.originatingFields is multiple\r\n\t\t\t\treturn changes.filter(delta => {\r\n\t\t\t\t\tvar observerPathArray_Resolved = this.filtersIsDynamic \r\n\t\t\t\t\t\t? observerPathArray.map((seg, k) => seg || seg === 0 ? seg : delta.path[k] || '')\r\n\t\t\t\t\t\t: observerPathArray;\r\n\t\t\t\t\tif (!observerPathArray_Resolved_Exploded[i].filter(_dynamicFieldOutcome => pathIsSame(_dynamicFieldOutcome, observerPathArray_Resolved)).length) {\r\n\t\t\t\t\t\tobserverPathArray_Resolved_Exploded[i].push(observerPathArray_Resolved);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (pathIsSame(observerPathArray_Resolved, delta.path)\r\n\t\t\t\t\t\t|| (this.params.suptree !== false && pathStartsWith(observerPathArray_Resolved, delta.path) && (!_isNumeric(this.params.suptree) || pathAfter(observerPathArray_Resolved, delta.path).length <= this.params.suptree))\r\n\t\t\t\t\t\t|| (this.params.subtree && pathStartsWith(delta.path, observerPathArray_Resolved) && (!_isNumeric(this.params.subtree) || pathAfter(delta.path, observerPathArray_Resolved).length <= this.params.subtree))\r\n\t\t\t\t\t) && (!this.filtersIsDynamic || !pathsIsDynamic(observerPathArray_Resolved)) && diff(delta);\r\n\t\t\t\t}).length;\r\n\t\t\t}).length;\r\n\t\t\tif (matches) {\r\n\t\t\t\t_crossJoin(observerPathArray_Resolved_Exploded).forEach(pathArrays => {\r\n\t\t\t\t\tvar _changes = this.formatChanges(pathArrays, changes);\r\n\t\t\t\t\tif (this.filtersIsOriginally2D) {\r\n\t\t\t\t\t\tvar changesObject = _changes;\r\n\t\t\t\t\t\tif (_isObject(this.filter)) {\r\n\t\t\t\t\t\t\tchangesObject = {};\r\n\t\t\t\t\t\t\t_each(this.filter, (name, pathArray, i) => {\r\n\t\t\t\t\t\t\t\tchangesObject[name] = _changes[i];\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tevt.respond(this.handler(changesObject, evt));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tevt.respond(this.handler(_changes[0], evt));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if ((this.params.subtree || changes.filter(delta => pathIsSame(delta.path, [delta.name])).length === changes.length) && changes.filter(delta => diff(delta)).length) {\r\n\t\t\tevt.respond(this.handler(changes, evt));\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Validates a proposed fire operation.\r\n\t *\r\n\t * @param array\t\t \tpathArrays\r\n\t * @param array\t\t\tchanges\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tformatChanges(pathArrays, changes) {\r\n\t\treturn this.params.data === false ? [] : pathArrays.map(pathArray => {\r\n\t\t\t// --------------------------\r\n\t\t\tvar match = changes.reduce((match, delta) => match || (\r\n\t\t\t\tpathIsSame(pathArray, delta.path)\r\n\t\t\t\t|| (this.params.suptree && pathStartsWith(pathArray, delta.path))\r\n\t\t\t\t|| (this.params.subtree && pathStartsWith(delta.path, pathArray))\r\n\t\t\t\t? delta : null\r\n\t\t\t), null);\r\n\t\t\tif (!match) {\r\n\t\t\t\tvar paddableMatch = changes.reduce(\r\n\t\t\t\t\t(match, delta) => match || pathStartsWith(pathArray, delta.path) ? delta : null, null\r\n\t\t\t\t);\r\n\t\t\t\tif (paddableMatch) {\r\n\t\t\t\t\tvar pathArrayPadding = pathAfter(pathArray, paddableMatch.path);\r\n\t\t\t\t\tvar delta = {\r\n\t\t\t\t\t\ttype: paddableMatch.type,\r\n\t\t\t\t\t\tname: paddableMatch.name,\r\n\t\t\t\t\t\tderived: true,\r\n\t\t\t\t\t\tsrc: paddableMatch,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (paddableMatch.type === 'del' || paddableMatch.isUpdate) {\r\n\t\t\t\t\t\tdelta.oldValue = _commonsGet(paddableMatch.oldValue, pathArrayPadding, {get:_get});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (paddableMatch.type !== 'del') {\r\n\t\t\t\t\t\tdelta.value = _commonsGet(paddableMatch.value, pathArrayPadding, {get:_get});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatch = new Delta(paddableMatch.subject, delta);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmatch = new Delta(this.subject, {\r\n\t\t\t\t\t\ttype: 'get',\r\n\t\t\t\t\t\tname: pathArray[0],\r\n\t\t\t\t\t\tpath: pathArray,\r\n\t\t\t\t\t\tvalue: _commonsGet(this.subject, pathArray, {get:_get}),\r\n\t\t\t\t\t\tderived: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t});\r\n\t}\r\n};\r\n","\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest || callback(itm, i), false);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from './from.js';\r\n\r\n/**\r\n * Accepts a list of column and joins them to a table.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\treturn arr.reduce((currTable, column) => {\r\n\t\tvar newTable = [];\r\n\t\tcurrTable.forEach(row => {\r\n\t\t\t_arrFrom(column).forEach(column => {\r\n\t\t\t\tvar _row = row.slice();\r\n\t\t\t\t_row.push(column);\r\n\t\t\t\tnewTable.push(_row);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn newTable;\r\n\t}, [[]]);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport Firebase from '../Firebase.js';\r\nimport Observer from './Observer.js';\r\nimport Delta from './Delta.js';\r\nimport Event from './Event.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Reactive class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Firebase {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(dfn) {\r\n\t\treturn super.add(new Observer(this.subject, dfn));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fires all observers with the given evt (change).\r\n\t *\r\n\t * @param array|Delta\t\tchanges\r\n\t *\r\n\t * @return Event\r\n\t */\r\n\tfire(changes) {\r\n\t\tvar evt = new Event(this.subject);\r\n\t\t// We accept multiple changes\r\n\t\tchanges = _arrFrom(changes, false).map(delta => !(delta instanceof Delta) ? new Delta(this.subject, delta) : delta);\r\n\t\tif (this.currentlyFiring.filter(d => changes.filter(delta => d.type === delta.type && d.name === delta.name).length).length) {\r\n\t\t\t//return false;\r\n\t\t}\r\n\t\tthis.currentlyFiring.push(...changes);\r\n\t\tthis.fireables.forEach(observer => {\r\n\t\t\tif (evt.propagationStopped) {\r\n\t\t\t\treturn evt;\r\n\t\t\t}\r\n\t\t\tevt.respond(observer.fire(changes));\r\n\t\t});\r\n\t\tchanges.forEach(delta => _remove(this.currentlyFiring, delta));\r\n\t\treturn evt;\r\n\t}\r\n};","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","/**\r\n * @imports\r\n */\r\nimport getFirebase from '../getFirebase.js';\r\nimport Observers from './Observers.js';\r\n\r\n/**\r\n * Returns Observers List handle.\r\n * \r\n * @param object    subject \r\n * @param bool      createIfNotExist \r\n * \r\n * @returns Observers\r\n */\r\nexport default function(subject, createIfNotExist = true) {\r\n    return getFirebase(subject, 'wn.observers', createIfNotExist ? Observers : null);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Runs an \"in\" query operation on a subject.\r\n * Fires any such query observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string\t\tkey\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, key) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute any \"has\" traps, otherwise \"test\" the default way\r\n\tvar interceptors, defaultHas = function(_state) {\r\n\t\treturn arguments.length ? _state : (key in subject);\r\n\t};\r\n\tif (interceptors = getInterceptors(subject, false)) {\r\n\t\treturn interceptors.fire({type:'has', name:key}, defaultHas);\r\n\t}\r\n\treturn defaultHas();\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport getObservers from '../observer/getObservers.js';\r\nimport build from '../observer/build.js';\r\nimport unlink from '../observer/unlink.js';\r\nimport link from '../observer/link.js';\r\nimport Event from '../observer/Event.js';\r\nimport getInterceptors from './getInterceptors.js';\r\nimport _has from './has.js';\r\nimport _get from './get.js';\r\n\r\n/**\r\n * Executes a \"_setProp\" type of operation on a subject.\r\n * Fires any observers for the specific type that may be bound to subject.\r\n *\r\n * @param bool\t\t\tdefine\r\n * @param array|object\tsubject\r\n * @param string|array\tkeysOrPayload\r\n * @param mixed\t\t\tvalue\r\n * @param Object\t\tparams\r\n *\r\n * @return Event\r\n */\r\nexport default function(define, subject, keysOrPayload, value = null, params = {}) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\tif (_isObject(keysOrPayload)) {\r\n\t\tparams = value || {};\r\n\t\tvalue = null;\r\n\t}\r\n\t// ----------\r\n\tvar interceptors = getInterceptors(subject, false),\r\n\t\tobservers = getObservers(subject, false);\r\n\t// ----------\r\n\tconst handleSet = (key, value, related, detail) => {\r\n\t\tvar type = 'set', descriptor;\r\n\t\tif (define) {\r\n\t\t\ttype = 'def';\r\n\t\t\tdescriptor = value || {};\r\n\t\t\tvalue = descriptor.value;\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\t// The event object\r\n\t\tvar isUpdate = false, oldValue;\r\n\t\tif (_has(subject, key)) {\r\n\t\t\tisUpdate = true;\r\n\t\t\toldValue = _get(subject, key);\r\n\t\t}\r\n\t\tvar e = {\r\n\t\t\tname:key,\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t\trelated,\r\n\t\t\tdetail,\r\n\t\t\tisUpdate,\r\n\t\t\toldValue,\r\n\t\t};\r\n\t\t// ---------------------------------\r\n\t\t// The set operation\r\n\t\tvar defaultSet = function(_success) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\tif (descriptor) {\r\n\t\t\t\t\tObject.defineProperty(subject, key, descriptor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsubject[key] = value;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn _success;\r\n\t\t};\r\n\t\tif (interceptors) {\r\n\t\t\tvar eventObject = descriptor \r\n\t\t\t\t? {type:'def', name:key, descriptor, related, detail, isUpdate, oldValue} \r\n\t\t\t\t: {type:'set', name:key, value, related, detail, isUpdate, oldValue};\r\n\t\t\te.success = interceptors.fire(eventObject, defaultSet);\r\n\t\t} else {\r\n\t\t\te.success = defaultSet();\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\tif (e.success && e.value !== e.oldValue) {\r\n\t\t\t// Unobserve outgoing value for bubbling\r\n\t\t\tif (_isTypeObject(e.oldValue)) {\r\n\t\t\t\tunlink(subject, key, e.oldValue);\r\n\t\t\t}\r\n\t\t\t// Observe incoming value for bubbling\r\n\t\t\tif (_isTypeObject(e.value)) {\r\n\t\t\t\tlink(subject, key, e.value);\r\n\t\t\t\tif (observers && (observers.subBuild || observers.build)) {\r\n\t\t\t\t\tbuild(e.value, observers.subBuild, observers.build);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn e;\r\n\t};\r\n\t// ---------------------------------\r\n\tvar keys, events = [];\r\n\tif (_isArray(keysOrPayload) || ((_isString(keysOrPayload) || _isNumber(keysOrPayload)) && (keys = _arrFrom(keysOrPayload)))) {\r\n\t\tevents = keys.map(key => handleSet(key, value, keys, params.detail));\r\n\t} else if (_isObject(keysOrPayload) && (keys = Object.keys(keysOrPayload))) {\r\n\t\tevents = keys.map(key => handleSet(key, keysOrPayload[key], keys, params.detail));\r\n\t}\r\n\tvar successfulEvents = events.filter(e => e.success);\r\n\t// ---------------------------------\r\n\tvar evt;\r\n\tif (observers) {\r\n\t\tevt = observers.fire(successfulEvents);\r\n\t\tevt.successCount = successfulEvents.length;\r\n\t} else if (params.eventObject) {\r\n\t\tevt = new Event(subject);\r\n\t}\r\n\treturn params.eventObject ? evt : successfulEvents.length > 0;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _setProp from './_setProp.js';\r\n\r\n/**\r\n * Executes a \"set\" operation on a subject.\r\n * Fires any observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeysOrPayload\r\n * @param mixed\t\t\tvalue\r\n * @param any\t\t\tdetail\r\n * @param object\t\tparams\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, keysOrPayload, value = null, detail = null, params = {}) {\r\n\treturn _setProp(false/*define*/, ...arguments);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\n// Interceptor\r\nimport set from './interceptor/set.js';\r\nimport get from './interceptor/get.js';\r\nimport has from './interceptor/has.js';\r\nimport deleteProperty from './interceptor/deleteProperty.js';\r\nimport defineProperty from './interceptor/defineProperty.js';\r\nimport keys from './interceptor/keys.js';\r\nimport ownKeys from './interceptor/ownKeys.js';\r\nimport intercept from './interceptor/intercept.js';\r\nimport unintercept from './interceptor/unintercept.js';\r\nimport proxy from './interceptor/proxy.js';\r\n// Observer\r\nimport observe from './observer/observe.js';\r\nimport unobserve from './observer/unobserve.js';\r\nimport closure from './observer/closure.js';\r\nimport init from './observer/init.js';\r\nimport build from './observer/build.js';\r\nimport link from './observer/link.js';\r\nimport unlink from './observer/unlink.js';\r\n\r\n// Now we'll mimick standard Trap properties\r\n// so that can be used as standard Trap out of the box.\r\nconst del = deleteProperty;\r\nconst def = defineProperty;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default {\r\n\t// Interceptor\r\n\tset,\r\n\tget,\r\n\thas,\r\n\tdeleteProperty,\r\n\tdel,\r\n\tdefineProperty,\r\n\tdef,\r\n\tkeys,\r\n\townKeys,\r\n\tintercept,\r\n\tunintercept,\r\n\tproxy,\r\n\t// Observer\r\n\tobserve,\r\n\tunobserve,\r\n\tclosure,\r\n\tinit,\r\n\tbuild,\r\n\tlink,\r\n\tunlink,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport matchRect from '@webqit/browser-pie/src/apis/matchRect.js';\r\nimport Observer from '@webqit/observer';\r\n\r\n/**\r\n * ---------------------------\r\n * The Observable media query\r\n * ---------------------------\r\n *\r\n * This is an Observable wrapper onver the window.matchMedia API,\r\n * and PlayUI's matchRect() API.\r\n */\r\n\t\t\t\r\nexport function matchMedia(query, target = null) {\r\n    var mediaMatchResult, observable = {matches: mediaMatchResult.matches};\r\n    if (target instanceof window.Element) {\r\n        mediaMatchResult = matchRect(target, query);\r\n    } else if (!target || target.matchMedia) {\r\n        mediaMatchResult = window.matchMedia(query);\r\n    } else {\r\n        throw new Error('Target must be window or an element.');\r\n    }\r\n    mediaMatchResult.addEventListener('change', e => {\r\n        Observer.set(observable, 'matches', e.matches);\r\n    });\r\n    return observable;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport { build } from '../../../src/build.js';\r\nimport * as ClientQuery from './index.js';\r\n\r\n// As globals\r\nwindow.WQ = window.WQ || {};\r\nwindow.WQ.Obsv = build('ClientQuery', ClientQuery);"],"sourceRoot":""}